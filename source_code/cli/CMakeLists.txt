cmake_minimum_required(VERSION 3.22.0)
set(CLIEXE tournament_builder_cli)
project(${CLIEXE})

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED True)

if(DEV_MODE)
	set(CMAKE_COMPILE_WARNING_AS_ERROR ON)
endif()
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

set(CLI_MAINFILE "src/cli_main.cpp")
set(INVOKE_HEADER "include/invoke_cli.h")
set(INVOKE_SOURCE "src/invoke_cli.cpp")

set(CLILIB tournament_builder_cli_lib)
add_library(${CLILIB} STATIC ${INVOKE_SOURCE})
add_executable(${CLIEXE} ${CLI_MAINFILE} $<TARGET_OBJECTS:${CPPLIB}> $<TARGET_OBJECTS:${CLILIB}>)

#TODO: Remove dependency on nlohmann/json
set(INCLUDE_DIRS "include" "../cpplib/include" "../thirdparty/nlohmann/json/single_include" "../thirdparty/cxxopts/cxxopts/include")
target_include_directories(${CLILIB} PRIVATE ${INCLUDE_DIRS})
target_include_directories(${CLIEXE} PRIVATE ${INCLUDE_DIRS})

source_group("src" FILES ${CLI_MAINFILE} ${INVOKE_HEADER} ${INVOKE_SOURCE})

target_sources(${CLIEXE} PRIVATE ${INVOKE_HEADER})
target_sources(${CLIEXE} PRIVATE ${CLI_MAINFILE})

set(CLILIB tournament_builder_cli_lib PARENT_SCOPE)
set(CLIEXE tournament_builder_cli PARENT_SCOPE)

# Install instructions below.

set(INSTALL_TARGET CLI)
install(TARGETS ${CLIEXE} DESTINATION ${INSTALL_TARGET})
file(GLOB PACKAGE_EXTRAS package_extras/*)
install(FILES ${PACKAGE_EXTRAS} DESTINATION ${INSTALL_TARGET})

# Testing

function(test_example_file filename)
	set(BASE_PATH "../../examples")
	set(INPUT_PATH "${BASE_PATH}/in/${filename}.json")
	set(OUTPUT_PATH "${BASE_PATH}/out/${filename}.json")
	add_test(NAME ${filename} COMMAND "$<TARGET_FILE:${CLIEXE}>" "--input" "${INPUT_PATH}" "--test-reference" "${OUTPUT_PATH}" "--random-seed" "42")
endfunction()

test_example_file("add_tags")
test_example_file("complex_elim")
test_example_file("DEBUG_never_resolves")
test_example_file("round_of_matches")
test_example_file("round_robin")
test_example_file("set_finishing_positions")
test_example_file("simple_elim")
test_example_file("test_references")
test_example_file("test_multireferences")
test_example_file("errors/ERROR_invalid_competitor_view_1")
test_example_file("errors/ERROR_invalid_competitor_view_2")
test_example_file("errors/ERROR_invalid_competitor_view_3")
test_example_file("errors/ERROR_invalid_descriptor_type")
test_example_file("errors/ERROR_mismatches_brackets")
test_example_file("errors/ERROR_knockout_bracket_wrong_entry_list_size")
test_example_file("errors/ERROR_round_robin_invalid_times_played")
test_example_file("errors/ERROR_round_robin_entry_list_has_byes")
test_example_file("errors/ERROR_event_type_does_not_exist")
test_example_file("errors/ERROR_set_finishing_positions_non_name_type")
test_example_file("errors/ERROR_set_finishing_positions_overly_nested")
test_example_file("errors/ERROR_set_finishing_positions_reference_in_entry_list")
test_example_file("errors/ERROR_set_finishing_positions_not_all_entries_placed")
test_example_file("errors/ERROR_set_finishing_positions_place_element_not_on_entry_list")
test_example_file("errors/ERROR_missing_fields")
test_example_file("errors/ERROR_empty_name")
test_example_file("errors/ERROR_invalid_name")
test_example_file("errors/ERROR_reference_outer_too_many_args")
test_example_file("errors/ERROR_reference_outer_non_numeric_arg")
test_example_file("errors/ERROR_reference_outer_non_positive_arg")
test_example_file("errors/ERROR_reference_outer_from_top_level")
test_example_file("errors/ERROR_reference_any_min_greater_than_max")
test_example_file("errors/ERROR_reference_any_negative_max_arg")
test_example_file("errors/ERROR_reference_any_negative_min_arg")
test_example_file("errors/ERROR_reference_any_non_numeric_arg")
test_example_file("errors/ERROR_reference_any_too_many_args")
test_example_file("errors/ERROR_reference_invalid_special_token")
test_example_file("errors/ERROR_invalid_format")